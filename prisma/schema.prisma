generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URL")
}

model Notes {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    title        String
    description  String
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt
    tagIDs       String[] @db.ObjectId
    tags         Tags[]   @relation(fields: [tagIDs], references: [id])
    pointedBy    Notes[]  @relation("NoteRelations", fields: [pointedByIDs], references: [id])
    pointedByIDs String[] @db.ObjectId
    pointsAt     Notes[]  @relation("NoteRelations", fields: [pointsAtIDs], references: [id])
    pointsAtIDs  String[] @db.ObjectId
    // as_source   Relations[] @relation("source")
    // as_target   Relations[] @relation("target")
}

model Nodes {
    id         String     @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    targets    Register[] @relation("targets")
    targetedBy Register[] @relation("targetedBy")
}

model Register {
    id           String @id @default(auto()) @map("_id") @db.ObjectId
    legend       String
    targeter     Nodes  @relation("targets", fields: [targeterID], references: [id])
    targeterID   String @db.ObjectId
    targetedBy   Nodes  @relation("targetedBy", fields: [targetedByID], references: [id])
    targetedByID String @db.ObjectId
}

// model Relations {
//     id       String  @id @default(auto()) @map("_id") @db.ObjectId
//     sourceID String  @db.ObjectId
//     source   Notes   @relation("source", fields: [sourceID], references: [id])
//     targetID String  @db.ObjectId
//     target   Notes   @relation("target", fields: [targetID], references: [id])
//     legend   String?
// }

model Tags {
    id      String   @id @default(auto()) @map("_id") @db.ObjectId
    name    String   @unique
    noteIDs String[] @db.ObjectId
    notes   Notes[]  @relation(fields: [noteIDs], references: [id])
}
